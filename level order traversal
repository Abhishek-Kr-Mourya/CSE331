#include <iostream>
#include <queue>
using namespace std;


struct TreeNode {
    int data;
    TreeNode* left;
    TreeNode* right;

    TreeNode(int val) : data(val), left(nullptr), right(nullptr) {}
};


void levelOrderTraversal(TreeNode* root) {
    if (root == nullptr) {
        return;
    }

    queue<TreeNode*> nodeQueue;
    nodeQueue.push(root);

    while (!nodeQueue.empty()) {
        TreeNode* currentNode = nodeQueue.front();
        nodeQueue.pop();

        cout << currentNode->data << " ";

        if (currentNode->left != nullptr) {
            nodeQueue.push(currentNode->left);
        }

        if (currentNode->right != nullptr) {
            nodeQueue.push(currentNode->right);
        }
    }
}

int main() {
    
    TreeNode* root = new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);

    cout << "Level Order Traversal: ";
    levelOrderTraversal(root);

    return 0;
}
